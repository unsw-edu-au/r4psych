# Analysis of Variance (ANOVA)

*lw add narrative*

4 (between participants - condition1234) x2 (between participants - individual difference categorical variable - demographicscateg) design

outcome: scale1_index

```{r eval = FALSE}

## first tell R that condition and demographicscateg are categorical (factors)

data_scalescomputed$condition1234 <- as.factor(data_scalescomputed$condition1234)
data_scalescomputed$demographicscateg <- as.factor(data_scalescomputed$demographicscateg)

## this creates a dataframe that contains the summary statistics (means, standard deviations, etc.)

scale1_stats <- ezStats(data = data_scalescomputed, 
                            dv = scale1_index,
                            wid = participantid,
                            between = c("condition1234","demographicscateg"))
                            
print(scale1_stats)

## this carries out an anova with condition1234 and demographicscateg as between-participants factors
## the output includes statistical tests of the main effect of condition1234, the main effect of demographicscateg, and the interaction between the two

scale1_anova <- ezANOVA(data = data_scalescomputed, 
                            dv = scale1_index,
                            wid = participantid,
                            between = c("condition1234","demographicscateg"),
                            return_aov = TRUE)

print(scale1_anova)

## NOTE THAT THE FOLLOWING WOULD BE DONE TO FURTHER INVESTIGATE AN INTERACTION OR A DIFFERENCE IN A MULTI-CATEGORICAL VARIABLE. 
## to build the contrasts we want to do (e.g., baseline vs. midpoint for PhD), we need to ask emmeans to create output to see what the rows represent.

scale1_emm <- emmeans(scale1_anova$aov, ~ condition1234 * demographicscateg)

scale1_emm

## now we can create a set of named vectors that represent each of the 8 means, based on the position in the 8-item list from emmeans.

cond1categ1 = c(1,0,0,0,0,0,0,0)
cond2categ1 = c(0,1,0,0,0,0,0,0)
cond3categ1 = c(0,0,1,0,0,0,0,0)
cond4categ1 = c(0,0,0,1,0,0,0,0)
cond1categ2 = c(0,0,0,0,1,0,0,0)
cond2categ2 = c(0,0,0,0,0,1,0,0)
cond3categ2 = c(0,0,0,0,0,0,1,0)
cond4categ2 = c(0,0,0,0,0,0,0,1)

cond1 = c(1,0,0,0,1,0,0,0)
cond2 = c(0,1,0,0,0,1,0,0)
cond3 = c(0,0,1,0,0,0,1,0)
cond4 = c(0,0,0,1,0,0,0,1)


## now we can ask for contrasts based on these vectors; we will explore the main effect of condition1234 by comparing each of the conditions to one another

scale1_contrasts <- contrast(scale1_emm, method = list("cond1 - cond2" = cond1 - cond2,
                                       "cond1 - cond3" = cond1 - cond3,
                                       "cond1 - cond4" = cond1 - cond4,
                                       "cond2 - cond3" = cond2 - cond3,
                                       "cond2 - cond4" = cond2 - cond4,
                                       "cond3 - cond4" = cond3 - cond4)) 
  

scale1_contrasts

## here's a version with confidence intervals instead of t and p values

scale1_contrastsCI <- scale1_contrasts %>%
                          confint()

scale1_contrastsCI

#you may have a specific planned contrast to run. Here let's imagine you want to compare condition 2 to all of the other 3 conditions in one comparison.

scale1_plannedcontraststats <- ezStats(data = data_scalescomputed, 
                            dv = scale1_index,
                            wid = participantid,
                            between = c("condition1234"))

scale1_plannedcontraststats

cond2v134 = c(0,1,0,0,0,1,0,0)
cond134v2 = c(1,0,1,1,1,0,1,1)

scale1_plannedcontrasts <- contrast(scale1_emm, method = list("condition 1 vs all the rest" = cond2v134 - cond134v2))
  
scale1_plannedcontrasts
```

Let's make a figure!

```{r eval = FALSE}

data_scalescomputed %>%
  ggplot(aes(x = condition1234, y = scale1_index, fill = demographicscateg)) +
  geom_boxplot() +
  theme_light()


data_scalescomputed %>%
  ggplot(aes(x = condition1234, y = scale1_index)) +
  geom_boxplot() +
  theme_light()

```
