[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Psychology",
    "section": "",
    "text": "Welcome!\nThis book is written in mind for someone working in Psychology and is venturing into R with little to no experience. Research data in Psychology is unique in that it is collected in formats that are human-readable but not exactly R-readable. Data wrangling conventions will often vary depending on research question and therefore by what type data is collected. In ‚ÄúR for Psychology‚Äù, we have compiled a series of real-world examples from different sub-disciplines and will walk through the process of wrangling, summary, analyses and visualisations\nThis book is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.\n\n\n\nHow to contribute\nThis book is built using Quarto and hosted via GitHub Pages. It is a living resource, we welcome any contributions from the Psychology community that would improve the quality of this book. There are many ways to contribute:\n\nFixing grammar and typos\nClarification or expanding on existing content\nContribute real-world data in worked examples\nAuthoring an entire chapter\n\nTake a look at our Contributing Guide to see how you can help!\n\n\nAcknowledgements\nThis book was created on the unceded territory of the Bedegal people who are the Traditional custodians of the lands where the Kensington campus is located.\nThe first version of this book was funded by the UNSW Research Infrastructure Scheme.\nWe would like to thank the following people who have contributed to the book:\n@daxkellie",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1¬† Introduction",
    "section": "",
    "text": "1.1 What you will learn\nHow to:\nPre-analysis stages:\nAnalysis stages:",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#what-you-will-learn",
    "href": "intro.html#what-you-will-learn",
    "title": "1¬† Introduction",
    "section": "",
    "text": "Read your hard-earned data into R\nWrangle and clean the data in a R-friendly format\nProduce summary statistics\nAnalyse your data\nVisualise your findings",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#how-book-is-organised",
    "href": "intro.html#how-book-is-organised",
    "title": "1¬† Introduction",
    "section": "1.2 How book is organised",
    "text": "1.2 How book is organised\nThis book is organised by data type (e.g.¬†Survey data, Questionnaire data).\nEach chapter will walk through the process will work with real-world Psychology data and will walk you through reading in data, to cleaning and eventually analysis and visualising the results.\n\n1.2.1 Conventions\nWe will refer to packages as {dplyr} and functions as mean(). Variables and objects (such as file names or data objects) as age and mtcars. Where it would aid understanding, we will sometimes refer to functions within a particular packages as dplyr::mutute()",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#prerequisites",
    "href": "intro.html#prerequisites",
    "title": "1¬† Introduction",
    "section": "1.3 Prerequisites",
    "text": "1.3 Prerequisites\nContent drawn from existing resources such as https://r4ds.hadley.nz/intro#prerequisites\n\n1.3.1 R\nDownload Point to intro to R content (RUWithme, Environmental Computing, Software Carpentry)\n\n\n1.3.2 RStudio\nRStudio projects Point to resource about Rproj (SWC)\nRunning R code https://r4ds.hadley.nz/intro#running-r-code\n\n\n1.3.3 Version control with git\n\n1.3.3.1 What is git?\n\n\n1.3.3.2 Why do I need git?\n\n\n\n\n1.3.4 R packages\nEvery code section will always begin with calls to R packages. There will be code that is commented out (have # preceding the code) for you to install these if you don‚Äôt have them on your computer\n\n# install.packages(dplyr)\n\nlibrary(dplyr)\n\nThere are few R packages that will be on heavy rotation when it comes to working with Psychology data. #### {tidyverse}\n{tidyverse} is a collection of R packages that is essential to a data scientist‚Äôs toolkit. By installing {tidyverse} you are actually installing 8 other packages. The ones we will most often use include:\n\n{dplyr}\n{ggplot2}\n{tidyr}\n\nThe handy thing is, when you load the {tidyverse} library into R, it will load the core suite of packages for you instead of you loading each of them independently! Efficiency!! üöÄ\n\nlibrary(tidyverse)\n\nOther packages that will be helpful for your R workflows include:\n\n{here}\n\n{janitor}\n\nAt the end of each chapter, we will also include our call to sessionInfo() so you can see what version of packages we are using.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#virtual-environments",
    "href": "intro.html#virtual-environments",
    "title": "1¬† Introduction",
    "section": "1.4 Virtual environments",
    "text": "1.4 Virtual environments\nSpeaking on what package versions as we write this book, we understand the R package space is constantly changing. This means sometimes code will break due to package updates and this is all part of the process! To combat this problem, we‚Äôve enlisted renv to create a reproducible environment for building this book.\n\n1.4.1 Download our virtual environment\nThe virtual environment used to build this book is stored in a lockfile. You can find this file in the GitHub repository where the source code of this book lives.\nThe lockfile is named renv.lock. You can download this file directly but clicking on the file name and clicking on the ‚ÄúDownload raw file‚Äù button.\n\nAlternatively, you can clone our repository into your computer. Learn more about cloning repositorsies and other GitHub workflows in Happy Git by Jenny Bryan.\nOnce you have this file downloaded, move it in a relevant project directory and then we can let {renv} work its magic.\n\n\n1.4.2 Install\nFirst things first, lets install renv if we don‚Äôt have it already.\n\ninstall.packages(\"renv\")\n\nlibrary(renv)\n\n\n\n1.4.3 Recreate virtual enviroment\nNow let‚Äôs tell renv where our downloaded renv.lock file is. Specific the path to the file in the function restore() and you are good to go!\n\nrestore(lockfile = \"path_to_renv.lock\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "organise.html",
    "href": "organise.html",
    "title": "2¬† Organise",
    "section": "",
    "text": "2.1 R projects\nR really cares about where things live on your computer, even if you don‚Äôt. Humans have gotten out of the habit of thinking very hard about where they put things on their machine; the search capabilities on the modern computer are quite good and you can generally find files quite easily by searching for them.\nWhen you are coding in R, however, you need to explicitly tell R where to find things. You can make this process much easier for yourself by always working within an RStudio Project.\nWhen you work within an RStudio project, you can reference everything in relation to the top level of that project folder. It doesn‚Äôt matter where that project folder lives on your machine (i.e.¬†Desktop, Documents, OneDrive, Dropbox) the code you write is always relative to your project folder. This means that you can share that whole project folder with someone else (your collaborators or supervisor), and your code won‚Äôt break.\nAlways open RStudio by double clicking on the .RProj file in the folder on your machine. There is an icon in the top right corner of RStudio that shows you which project you are working in and makes it easy to switch between projects.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Organise</span>"
    ]
  },
  {
    "objectID": "organise.html#r-projects",
    "href": "organise.html#r-projects",
    "title": "2¬† Organise",
    "section": "",
    "text": "When you start a new analysis project, create a New RStudio Project via the File tab.\n\n\n\n\nWorking in an RStudio Project called my_new_analysis",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Organise</span>"
    ]
  },
  {
    "objectID": "organise.html#where-is-here",
    "href": "organise.html#where-is-here",
    "title": "2¬† Organise",
    "section": "2.2 where is here?",
    "text": "2.2 where is here?\nOnce you have set up a project to contain your analysis, you can avoid further file path drama by using the here() package. This package makes it super easy to refer to file paths and ensures that your code will work, even if someone else is trying to run it on a different computer.\nOnce you have installed the here() package, use it to tell R where you find your data like this. This code chunk loads there here() and readr() packages and then tells R to read in a csv file, located in the ‚Äúdata‚Äù folder, and the file is called file.csv\n\nmydata &lt;- read_csv(here(\"data\", \"file.csv\"))\n\nBy referring to the location of your data using the here() package, here is no need worry about working directories, and you can be sure that your code will work on any machine.\n\nTo read more about why projects and the here() package are useful, check out this blog by Jenny Bryan",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Organise</span>"
    ]
  },
  {
    "objectID": "organise.html#folder-structure",
    "href": "organise.html#folder-structure",
    "title": "2¬† Organise",
    "section": "2.3 folder structure",
    "text": "2.3 folder structure\nOnce you have your project set up, you might like to think about imposing some structure on it. It is mostly personal preference, but many analysis projects include the following folders.\n\ndata\n\nraw-data\nclean-data\n\noutput\n\nfigures\ntables\n\nmanuscript\n\nYou always want to keep your raw data untouched and separate from any data that you write back to your machine after your data cleaning process, so a raw-data subfolder can be useful.\nIn addition, you might want to organise your figures and tables into an output folder and put any writing that you are doing in the manuscripts folder.\n\nIf you want to write a manuscript (or maybe your whole thesis!) using RMarkdown, check out the papaja (Preparing APA Journal Articles) package\n\nUsually the scripts (or R Markdown) documents that you write your code in, live in the top level of your project file. In RStudio, your project structure might look something like this.\n\n\n\nA project structure template",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Organise</span>"
    ]
  },
  {
    "objectID": "organise.html#naming-things",
    "href": "organise.html#naming-things",
    "title": "2¬† Organise",
    "section": "2.4 naming things",
    "text": "2.4 naming things\nWhen naming things in your analysis folder, it is a good idea to think about your future self. In all likelihood, when you come back to this analysis in a few months time, you will have no recollection how it actually worked, but you can leave yourself some breadcrumbs by being a bit intentional about naming things.\nYour file names should be meaningful and orderly. The name of each file should tell the new user (or future you) what is in the file and where it goes in the process.\n\ncleaning-functions.R\n1_wrangle.Rmd\n2_visualise.Rmd\n3_analyse.Rmd\n\nIn this project, I can tell by glancing at the file names that I have a script (.R) that contains functions and three R Markdown files that contain each stage of the analysis.\nSticking with lower case is a good idea; avoid special characters and use - or _ to fill any gaps.\nFind more useful naming tips in the Tidyverse Style guide.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Organise</span>"
    ]
  },
  {
    "objectID": "organise.html#documenting-things",
    "href": "organise.html#documenting-things",
    "title": "2¬† Organise",
    "section": "2.5 documenting things",
    "text": "2.5 documenting things\n\n2.5.1 README\nIn addition to the breadcrumbs that our file names leave, it is also a good idea to leave explicit notes to your future self (or someone else) in a README.md file. This is a simple text file that contains instructions for how the user should engage with your project.\nCreate a new Markdown file and save it as README.md\nUse it to leave yourself instructions that look a bit like this.\n\n\n\nAn example README file\n\n\n\n\n2.5.2 R Markdown\nIn addition to leaving your future self explicit notes about how to engage with the project generally in a README document, it is also best practice to document your code in a way that makes it really clear what the code is doing and why. For this reason, we recommend using R Markdown documents (rather than R scripts) for your analysis.\nR Markdown is a handy file format that allows you to intersperse chunks of code with notes. This kind of document makes it easy to write explanations, interpretations, and thoughts for your future self as you code. This kind of documentation makes it much more likely to be able to make sense of what you have done and why, when you come back to your analysis in a few months time.\nR Markdown documents can also be ‚Äúknitted‚Äù into html, pdf, or word documents, allowing you to share your analysis (and associated thoughts) with collaborators, even if they don‚Äôt know R.\nTo get up to speed on R Markdown and how to use it, check out RLadiesSydney #RYouWithMe MarkyMark module",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Organise</span>"
    ]
  },
  {
    "objectID": "import.html",
    "href": "import.html",
    "title": "3¬† Import",
    "section": "",
    "text": "4 Packages for this chapter\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(here)\n\nhere() starts at /home/runner/work/r4psych/r4psych\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(haven)\nlibrary(sjPlot)\n\nLearn more about sjPlot with 'browseVignettes(\"sjPlot\")'.\n\n# remotes::install_github(\"martinctc/surveytoolbox\")\nlibrary(surveytoolbox)",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "import.html#reading-in-excel-spreadsheets",
    "href": "import.html#reading-in-excel-spreadsheets",
    "title": "3¬† Import",
    "section": "4.1 Reading in Excel spreadsheets",
    "text": "4.1 Reading in Excel spreadsheets\nThis is gobbledygook.\n\n4.1.1 Reading in .csv",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "import.html#reading-in-spss",
    "href": "import.html#reading-in-spss",
    "title": "3¬† Import",
    "section": "4.2 Reading in SPSS",
    "text": "4.2 Reading in SPSS",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "import.html#reading-in-qualtrics-data",
    "href": "import.html#reading-in-qualtrics-data",
    "title": "3¬† Import",
    "section": "4.3 Reading in Qualtrics data",
    "text": "4.3 Reading in Qualtrics data\n\n4.3.1 Reading in .sav",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "wrangle.html",
    "href": "wrangle.html",
    "title": "4¬† Wrangle",
    "section": "",
    "text": "4.1 Clean names",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Wrangle</span>"
    ]
  },
  {
    "objectID": "wrangle.html#dealing-with-labels",
    "href": "wrangle.html#dealing-with-labels",
    "title": "4¬† Wrangle",
    "section": "4.2 Dealing with labels",
    "text": "4.2 Dealing with labels",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Wrangle</span>"
    ]
  },
  {
    "objectID": "wrangle.html#exclusions",
    "href": "wrangle.html#exclusions",
    "title": "4¬† Wrangle",
    "section": "4.3 Exclusions",
    "text": "4.3 Exclusions\nmutate case_when\nfilter",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Wrangle</span>"
    ]
  },
  {
    "objectID": "wrangle.html#creating-scales-and-indexes",
    "href": "wrangle.html#creating-scales-and-indexes",
    "title": "4¬† Wrangle",
    "section": "4.4 Creating scales and indexes",
    "text": "4.4 Creating scales and indexes\ngroup_by summarise\nrow_wise mutate\n\n4.4.1 Checking reliabilty",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Wrangle</span>"
    ]
  },
  {
    "objectID": "describe.html",
    "href": "describe.html",
    "title": "5¬† Describe",
    "section": "",
    "text": "5.1 getting a feel for your data\nstr\nglimpse\nskimr",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Describe</span>"
    ]
  },
  {
    "objectID": "describe.html#counting-things",
    "href": "describe.html#counting-things",
    "title": "5¬† Describe",
    "section": "5.2 counting things",
    "text": "5.2 counting things\ngroup_by + summarise + count\nn\ntabyl",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Describe</span>"
    ]
  },
  {
    "objectID": "describe.html#getting-descriptives",
    "href": "describe.html#getting-descriptives",
    "title": "5¬† Describe",
    "section": "5.3 getting descriptives",
    "text": "5.3 getting descriptives\ngroup_by + summarise + mean & sd\n\nscale1_by_condition12 &lt;- data_scalescomputed %&gt;%\n  group_by(condition12) %&gt;%\n  summarise(mean_scale1 = mean(scale1_index, na.rm = TRUE),\n            sd_scale1 = sd(scale1_index, na.rm = TRUE))\n\n\n5.3.1 Three things to remember\n\nWhen we compute means, we need to set the decimals via round().\nWe also need to tell R to calculate the mean, even if some of the contributing data points are missing. This is what na.rm = TRUE does.\nAs noted above, rowwise asks R to do something for each row (which is what we want here ‚Äì to compute the mean of the contributing items for each participant). Whenever we use rowwise (or group_by), we need to ungroup() at the end to avoid issues down the line.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Describe</span>"
    ]
  },
  {
    "objectID": "describe.html#tables",
    "href": "describe.html#tables",
    "title": "5¬† Describe",
    "section": "5.4 tables??",
    "text": "5.4 tables??\ngt\n\ngt(scale1_by_condition12)\n\napaTable",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Describe</span>"
    ]
  },
  {
    "objectID": "plot.html",
    "href": "plot.html",
    "title": "6¬† Plot",
    "section": "",
    "text": "6.1 Plotting raw data\ngeom_point\ngeom_histogram\ngeom_boxplot\ngeom_violin",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Plot</span>"
    ]
  },
  {
    "objectID": "plot.html#plotting-data-summaries",
    "href": "plot.html#plotting-data-summaries",
    "title": "6¬† Plot",
    "section": "6.2 Plotting data summaries",
    "text": "6.2 Plotting data summaries\ngeom_col",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Plot</span>"
    ]
  },
  {
    "objectID": "inferences.html",
    "href": "inferences.html",
    "title": "7¬† Infer",
    "section": "",
    "text": "8 Moving into analyses",
    "crumbs": [
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Infer</span>"
    ]
  },
  {
    "objectID": "inferences.html#plots-and-descriptives",
    "href": "inferences.html#plots-and-descriptives",
    "title": "7¬† Infer",
    "section": "8.1 Plots and descriptives",
    "text": "8.1 Plots and descriptives\nNow, let‚Äôs test whether this scale varies by condition (condition 1 vs.¬†condition 2 in condition12).\nBefore jumping into t-tests, let‚Äôs first visualise the data (scale1_index) to get a sense of what it looks like.\nThe first command here tells R to treat condition12 as a categorical variable that groups the data (technically, a factor). This is helpful for plotting. The code uses the dataframe$variablename structure to do a command on just one variable.\nThe second command pipes the data into a command to create a boxplot (geom_boxplot) with the datapoints plotted as well (geom_jitter).The width command makes the plotting of the dots a bit narrower to help with interpretation.\n\ndata_scalescomputed$condition12 &lt;- as.factor(data_scalescomputed$condition12)\n\ndata_scalescomputed %&gt;%\n  ggplot(aes(x = condition12, y = scale1_index, fill = condition12)) +\n  geom_boxplot(alpha = .5) +\n  geom_jitter(alpha = .5, width = 0.2)\n\nBased on the boxplot, we‚Äôd expect a t-test to be nonsignificant - the wide boxes of the plots for each condition overlap, even though the mean of condition 2 is slightly higher than condition 1 (the horizontal line through the box).",
    "crumbs": [
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Infer</span>"
    ]
  },
  {
    "objectID": "inferences.html#t-test",
    "href": "inferences.html#t-test",
    "title": "7¬† Infer",
    "section": "8.2 t-test",
    "text": "8.2 t-test\nThe first line of code uses the base R command to run a t-test. It tells R to do the test on the data_scalescomputed data frame, asking whether scale1_index varies by (~) condition. var. sets the assumption of variance and conf.level sets the desired alpha of the test. That command is wrapped in the handy t_apa function, which makes the output much easier to read (and pull directly into a write-up!), and also allows us to get a confidence interval on the effect size (es_ci).\nFor reporting, you‚Äôd probably also want to know the means and standard deviations by condition. The next bit of code asks R to do this, using the summarise function, separately for each condition. Reminder to use na.rm here to account for any missing values.\nThe gt() command shows the requested dataframe in a nice formatting.\n\nt_apa(t.test(data = data_scalescomputed, scale1_index ~ condition12, var. = TRUE, conf.level = .95), es_ci = TRUE)\n\n\nscale1_by_condition12 &lt;- data_scalescomputed %&gt;%\n  group_by(condition12) %&gt;%\n  summarise(mean_scale1 = mean(scale1_index, na.rm = TRUE),\n            sd_scale1 = sd(scale1_index, na.rm = TRUE))\n\n\ngt(scale1_by_condition12)",
    "crumbs": [
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Infer</span>"
    ]
  },
  {
    "objectID": "contributing.html",
    "href": "contributing.html",
    "title": "8¬† Contributing",
    "section": "",
    "text": "8.0.1 GitHub Workflow",
    "crumbs": [
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Contributing</span>"
    ]
  },
  {
    "objectID": "contributing.html#book-structure",
    "href": "contributing.html#book-structure",
    "title": "8¬† Contributing",
    "section": "8.1 Book Structure",
    "text": "8.1 Book Structure",
    "crumbs": [
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Contributing</span>"
    ]
  },
  {
    "objectID": "contributing.html#book-practices-and-conventions",
    "href": "contributing.html#book-practices-and-conventions",
    "title": "8¬† Contributing",
    "section": "8.2 Book Practices and Conventions",
    "text": "8.2 Book Practices and Conventions",
    "crumbs": [
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Contributing</span>"
    ]
  },
  {
    "objectID": "contributing.html#book-contributions",
    "href": "contributing.html#book-contributions",
    "title": "8¬† Contributing",
    "section": "8.3 Book Contributions",
    "text": "8.3 Book Contributions\n\n8.3.1 Edits\n\n\n8.3.2 Additions",
    "crumbs": [
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Contributing</span>"
    ]
  },
  {
    "objectID": "contributing.html#contribution-review",
    "href": "contributing.html#contribution-review",
    "title": "8¬† Contributing",
    "section": "8.4 Contribution Review",
    "text": "8.4 Contribution Review",
    "crumbs": [
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Contributing</span>"
    ]
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "10¬† Appendix",
    "section": "",
    "text": "11 how to install R and RStudio on your machine\nThe marvellous Danielle Navarro has LOTS of useful R learning resources on her YouTube channel. This playlist about how to install R and RStudio is particularly useful; no matter which operating system you are dealing with‚Ä¶ Dani has you covered.",
    "crumbs": [
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#option-1",
    "href": "appendix.html#option-1",
    "title": "10¬† Appendix",
    "section": "12.1 option 1",
    "text": "12.1 option 1\nInstall a package by typing the following command with the name of the package you would like to install in the console.\ninstall.packages(\"packagename\")",
    "crumbs": [
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#option-2",
    "href": "appendix.html#option-2",
    "title": "10¬† Appendix",
    "section": "12.2 option 2",
    "text": "12.2 option 2\nAlternatively, search for the package you would like to install in the packages tab.\n\n\n\nYou can search for packages and install them from CRAN via the packages tab\n\n\n\nRemember once you have installed a package, you will need to use the library() function to load it before it will work.",
    "crumbs": [
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#useful-packages-for-psychology",
    "href": "appendix.html#useful-packages-for-psychology",
    "title": "10¬† Appendix",
    "section": "12.3 useful packages for psychology",
    "text": "12.3 useful packages for psychology\n\ntidyverse this is a cluster of super helpful data wrangling and visualisation tools.\nhere this package helps direct R to the correct place for files based on the current working directory.\njanitor this package helps us clean up data - especially awkward variable names.\nqualtRics this package is helpful in reading in data files from Qualtrics‚Ä¶ except for .sav SPSS format files! (see next)\nhaven this package is a good one for reading in .sav SPSS format files\nsjplot this package is helpful for making a ‚Äòcodebook‚Äô of your variables and values from imported .sav files\nsurveytoolbox this package is helpful in drawing out the value labels of variables imported in .sav format ‚Äì note: because surveytoolbox is on github and not CRAN, you‚Äôll want to do the following two steps in the console. Note that we do this in the console since we only need to do it once! If the install asks you about updating packages, go ahead and do it! ‚Äî(1) install the devtools package: install.packages(‚Äúdevtools‚Äù) ‚Äî(2) install via github: devtools::install_github(‚Äúmartinctc/surveytoolbox‚Äù)\nufs this package (short for user friendly science) is a nice tool for computing the internal reliability of scales ‚Äì note: one of the commands we will use in ufs requires the psych package to be installed (but doesn‚Äôt need to be loaded via library()). Ensure you install that first. Two steps: ‚Äî-(1) install the `remotes`` package: install.packages(‚Äúremotes‚Äù) ‚Äî-(2) install via github_lab: remotes::install_gitlab(‚Äòr-packages/ufs‚Äô)\napa nice for making statistical output into APA style\ngt nice for making your tables look pretty\napaTables makes nice APA-styled tables of correlation, ANOVA, regression etc. output\nreport is a package to help with results reporting\npsych is an umbrella package for lots of common psych tasks\nez is a great package for stats, including analysis of variance\nemmeans is helpful for comparing specific means in a factorial design",
    "crumbs": [
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  }
]